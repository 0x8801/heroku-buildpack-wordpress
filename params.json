{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"heroku-buildpack-wordpress","tagline":"Run Wordpress on Heroku","google":"UA-31205985-1","body":"# Heroku buildpack: Wordpress\r\n\r\nThis is a Heroku buildpack for [Wordpress](http://wordpress.org).\r\n\r\nThe [Wordpress](http://github.com/mchung/wordpress-on-heroku) project template is a highly tuned web stack built on the following components:\r\n\r\n* `nginx-1.3.11` - Nginx for serving content. Built specifically for Heroku. ([See compile options](https://github.com/mchung/heroku-buildpack-wordpress/blob/master/support/package_nginx))\r\n* `php-5.4.11` - PHP-FPM for intelligent process management. APC for op-code caching. ([See compile options](https://github.com/mchung/heroku-buildpack-wordpress/blob/master/support/package_php))\r\n* `wordpress-3.5.1` - Downloaded directly [from wordpress.org](http://wordpress.org/download/release-archive/).\r\n* `MySQL` - ClearDB for the MySQL backend.\r\n* `SMTP over Sendgrid` - Sendgrid for the email backend.\r\n* `Memcached` - MemCachier for the memcached backend.\r\n\r\n## Getting started in 60 seconds\r\n\r\nFork this [Wordpress project template](http://github.com/mchung/wordpress-on-heroku).\r\n\r\nClone the repository\r\n```bash\r\n$ git clone git://github.com/username/wordpress-on-heroku.git myblog\r\n```\r\n\r\nCreate the app on Heroku.\r\n```bash\r\n$ cd myblog\r\n$ heroku create -s cedar\r\n$ heroku config:add BUILDPACK_URL=https://github.com/mchung/heroku-buildpack-wordpress.git\r\n```\r\nDon't have Heroku installed? Follow these instructions to install the [Heroku Toolbelt](https://devcenter.heroku.com/articles/quickstart) on your system.\r\n\r\nDeploy your Wordpress site to Heroku\r\n```bash\r\n$ git push heroku master\r\n...\r\n-----> Heroku receiving push\r\n-----> Fetching custom git buildpack... done\r\n-----> Wordpress app detected\r\n.\r\n[...]\r\n.\r\n-----> Discovering process types\r\n       Procfile declares types     -> (none)\r\n       Default types for Wordpress -> web\r\n-----> Compiled slug size: 33.7MB\r\n-----> Launching... done, v7\r\n```\r\n\r\nOpen your new Wordpress site in a web browser\r\n```bash\r\n$ heroku apps:open\r\n```\r\n\r\nHappy?  Don't forget to [add your site to the wiki](https://github.com/mchung/heroku-buildpack-wordpress/wiki/Sites-running-Wordpress-on-Heroku)\r\n\r\n\r\n## Overview\r\n\r\nThe buildpack bootstraps a Wordpress site using the [mchung/wordpress-on-heroku](http://github.com/mchung/wordpress-on-heroku) project template.  That repo contains everything required to configure Wordpress on Heroku.\r\n\r\nEnabling the following Wordpress plugins will also speed things up.\r\n\r\n* `heroku-sendgrid` - Instructs phpmailer to send email with Sendgrid\r\n* `wpro` - Instructs Wordpress to upload everything to S3\r\n* `batcache` - Instructs Wordpress to use memcached to cache everything\r\n* `memcachier` - Uses a better memcached plugin\r\n* `cloudflare` - OPTIONAL.  If Cloudflare is installed, the plugin instructs Wordpress to play nicely with CloudFlare.  It sets the correct IP addresses from visitors and comments, and also protects Wordpress from spammers.  Keep in mind that the free version doesn't support SSL.\r\n\r\nThere are also several config files for configuring the performance of Wordpress on Heroku.\r\n\r\n* `wp-content` - Wordpress themes and plugins\r\n* `wp-config.php` - Wordpress configuration\r\n* `nginx.conf.erb` - Nginx configuration\r\n* `php-fpm.conf` - PHP-FPM configuration\r\n* `php.ini` - PHP configuration\r\n\r\nFeel free to hack on these files.  For example, to remove the PHP-FPM status page at `/status.html`, delete the directive from `nginx.conf.erb`.  Themes and plugins can be added and deployed to the `setup/wp-content` directory.\r\n\r\n## Usage\r\n\r\n### Adding a custom domain name\r\n```bash\r\n$ heroku domains:add marcchung.org\r\n$ heroku domains:add www.marcchung.org\r\n```\r\n\r\nNote: Adding a domain still requires some DNS setup work. Basically you'll want to do something like this:\r\n```bash\r\nALIAS marcchung.org -> proxy.herokuapp.com\r\nCNAME www.marcchung.org -> proxy.herokuapp.com\r\n```\r\n[P.S. I use DNSimple and you should too](https://dnsimple.com/r/d2bc9a934910c1).\r\n\r\n### Adding a theme\r\n```bash\r\n$ cp -r appply setup/wp-content/themes/\r\n$ git add .\r\n$ git commit -m \"New theme\"\r\n$ git push heroku master\r\n```\r\n\r\n### Adding a plugin\r\n```bash\r\n$ cp -r google-analytics setup/wp-content/plugins/\r\n$ git add .\r\n$ git commit -m \"New plugin\"\r\n$ git push heroku master\r\n```\r\nDon't forget to activate it under the Plugins panel.\r\n\r\n### Configuring cron\r\nBy default, wp-cron is fired on every page load and scheduled to run jobs like future posts or backups.  This buildpack disables wp-cron so that visitors don't have to wait to see the site.\r\n\r\nHeroku allows you to trigger wp-cron from their scheduler\r\n```bash\r\n$ heroku addons:add scheduler:standard\r\n\r\n# Visit the Heroku scheduler dashboard and add a new task:\r\n./cron.sh\r\n```\r\n\r\nAlternatively, you may also re-enable wp-cron\r\n```bash\r\n$ heroku config:set DISABLE_WP_CRON=false\r\n```\r\n\r\n### Enable system access\r\nThe alternative PHP cache and a generic PHPINFO page is available at /apc.php and /phpinfo.php.\r\n```bash\r\n$ heroku config:set ENABLE_SYSTEM_DEBUG=true\r\n$ heroku config:set SYSTEM_USERNAME=admin\r\n$ heroku config:set SYSTEM_PASSWORD=secret123\r\n# Visit /apc.php or /phpinfo.php\r\n```\r\n\r\n### Workflow (optional)\r\n\r\nBy keeping your changes separate, it'll be easier to pull in changes from the Wordpress site template.\r\n\r\nAssign a remote `upstream`\r\n```bash\r\n$ git remote add upstream https://github.com/mchung/wordpress-on-heroku.git\r\n```\r\n\r\nTrack changes in a separate branch called `production`.\r\n```bash\r\n$ git checkout -B production\r\n$ git push heroku production:master\r\n# This keeps upstream changes separate from blog changes.\r\n```\r\n\r\nPull changes from upstream into `master`\r\n```bash\r\n$ git co master\r\n$ git pull\r\n$ git co production\r\n$ git merge master\r\n```\r\n\r\nPull changes from upstream into `production`\r\n```bash\r\n$ git pull --rebase upstream master\r\n```\r\n\r\n## How fast is this?\r\n\r\nHere are some benchmarks.\r\n\r\n### Google PageSpeed\r\n\r\nResults from PageSpeed Insights: 94/100\r\n\r\n[See the PageSpeed report](https://developers.google.com/speed/pagespeed/insights#url=wordpress-on-heroku.herokuapp.com&mobile=false)\r\n\r\n### blitz.io\r\n\r\nResults from a blitz.io rush on a single Heroku dyno:\r\n\r\n![Blitz.io rush](https://s3.amazonaws.com/heroku-buildpack-wordpress/woh-blitz-details.png)\r\n\r\n[See the Blitz.io report](https://www.blitz.io/report/541eb908b4ef3eec8d9c2ce2293a85ca)\r\n\r\n### Web Page Performance Test\r\n\r\n![Results from WebPageTest](https://s3.amazonaws.com/heroku-buildpack-wordpress/woh-webpagetest-details.png)\r\n\r\n[See the WebPageTest report](http://www.webpagetest.org/result/130201_BB_624/)\r\n\r\n## But doesn't Heroku only run Ruby applications?\r\n\r\nNot anymore. Heroku's latest offerings (See [Celadon Cedar stack](http://devcenter.heroku.com/articles/cedar)) makes it easy (well, easyish) for developers to install and run any language, or service.\r\n\r\n## Constraints with Heroku\r\n\r\nThe [ephemeral filesystem](http://devcenter.heroku.com/articles/dyno-isolation)\r\n\r\n* End-users cannot upload media assets to Heroku. WORKAROUND: Enable `wpro` and use that plugin to upload media assets to S3 instead.\r\n* End-users cannot update themes or plugins from the admin page. WORKAROUND: Add them to `setup/wp-content/themes` or `setup/wp-content/plugins` then push to Heroku.\r\n\r\n## Security disclosure\r\n\r\nEach time Wordpress is deployed, Heroku will fetch the latest buildpack from GitHub and execute the instructions in `compile` and `deploy`.  This buildpack will download the latest precompiled versions of Nginx, PHP, and Wordpress from my personal [S3 bucket](http://heroku-buildpack-wordpress.s3.amazonaws.com) then add in config files from the [`setup`](https://github.com/mchung/wordpress-on-heroku/tree/master/setup) directory.\r\n\r\n## Hacking and Contributing\r\n\r\nNot comfortable downloading and running a copy of someone else's PHP or Nginx? Not a problem!\r\n\r\nThe `support` directory also contains a handful of compilation and deployment scripts to automate several processes, which are currently used for maintenance and repo management.\r\n\r\n* `package_nginx` - Used to compile and upload the latest version of Nginx to S3.\r\n* `package_php` - Used to compile and upload the latest version of PHP to S3.\r\n* `wordup` - Really useful helper script for creating and destroying Wordpress sites.\r\n\r\n## TODO\r\n\r\n* Automate vendor upgrades. Make it easy to keep in sync with latest Nginx, PHP, and Wordpress.\r\n* End-users shouldn't be able to do things that aren't supported on Heroku.\r\n* Integrate New Relic.\r\n\r\n## Authors and Contributors\r\n\r\n* Marc Chung - [@mchung](https://github.com/mchung) on GitHub or [@heisenthought](https://twitter.com/heisenthought) on Twitter\r\n\r\n## Thanks\r\n\r\nThanks for reading this all the way through. If you find this useful, please add an entry to the [list of Wordpress sites running on Heroku](https://github.com/mchung/heroku-buildpack-wordpress/wiki/Sites-running-Wordpress-on-Heroku).\r\n\r\n## License\r\n\r\nThe MIT License - Copyright (c) 2013 Marc Chung\r\n\r\n<link href='http://haikuist.com/assets/embed.css' media='screen' rel='stylesheet' type='text/css'>\r\n<div class='haikuist_snippet' id='haiku-1922'>\r\n<div class='poem'>\r\n<div class='line1'>\r\ntake my code with you\r\n</div>\r\n<div class='line2'>\r\nand do whatever you want\r\n</div>\r\n<div class='line3'>\r\nbut please don't blame me\r\n</div>\r\n<div class='author'>\r\n&mdash;\r\nAaron Swartz\r\n</div>\r\n</div>\r\n<div class='meta'>\r\n<a href=\"http://haikuist.com/haiku/1922\">This Haiku</a>\r\nbrought to you by\r\n<a href=\"http://haikuist.com/\">Haikuist</a>\r\n</div>\r\n</div>\r\n"}